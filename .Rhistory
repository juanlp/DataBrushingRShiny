shiny::runApp()
install.packages("jsonlite")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
iris <- datasets::iris
xtable(iris)
table(iris)
xtable
?table
names(iris)
table(iris$Species)
RJSONIO::toJSON(table(iris$Species), byrow=T, colNames=T)
as.data.frame(table(iris$Species))
RJSONIO::toJSON(as.data.frame(table(iris$Species)), byrow=T, colNames=T)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
RJSONIO::toJSON(iris[iris$species == input$species,], byrow=T, colNames=T)
iris <- datasets::iris
RJSONIO::toJSON(iris[iris$species == input$species,], byrow=T, colNames=T)
RJSONIO::toJSON(as.data.frame(table(iris$Species)), byrow=T, colNames=T)
iris
names(iris)
iris <- datasets::iris
names(iris) <- gsub('[/.]','_',tolower(names(iris)))
names(iris)
names(as.data.frame(table(iris$Species))
)
irisfreq <- as.data.frame(table(iris$Species)
names(irisfreq)
irisfreq <- as.data.frame(table(iris$Species)
names(irisfreq)
irisfreq <- as.data.frame(table(iris$Species))
names(irisfreq)
irisfreq
iris <- datasets::iris
names(iris) <- gsub('[/.]','_',tolower(names(iris)))
names(iris)
shiny::runApp()
unique(iris$species)
RJSONIO::toJSON(iris[iris$species == 'versicolor',], byrow=T, colNames=T)
iris <- datasets::iris
names(iris) <- gsub('[/.]','_',tolower(names(iris)))
RJSONIO::toJSON(as.data.frame(table(iris$species)), byrow=T, colNames=T)
RJSONIO::toJSON(as.data.frame(table(iris$species)), byrow=T, colNames=T, rowNames=T)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
as.data.frame(table(iris$species))
RJSONIO::toJSON(as.data.frame(table(iris$species)), byrow=T, colNames=T)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(iris) <- gsub('[/.]','_',tolower(names(iris)))
specs       <- as.character(unique(iris$species))
specs[0]
specs[1]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sel_species = specs[1]
sel_species
RJSONIO::toJSON(iris[iris$species == sel_species,], byrow=T, colNames=T)
shiny::runApp()
?sendCustomMessage
library(shiny)
sendCustomMessage
?session$sendCustomMessage
?session
?observe
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
